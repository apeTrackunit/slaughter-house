syntax = "proto3";
option java_multiple_files = true;
package com.example.testrestapi;

message GetAnimalIdsRequest {
  int64 productId = 1;
}

message GetAnimalIdsResponse {
  repeated int64 animalIds = 1 [packed=true];
}

message GetAnimalRequest{
  int64 animalId = 1;
}

message GetAnimalResponse{
  int64 animalId = 1;
  double weight = 2;
  bool isOk = 3;
  int64 farmId = 4;
  int64 animalTypeId = 5;
  string registrationDate = 6;
}

message CreateAnimalRequest{
  double weight = 1;
  bool isOk = 2;
  int64 farmId = 3;
  int64 animalTypeId = 4;
  string registrationDate = 5;
}

message CreateAnimalResponse{
  string confirmation = 1;
}

message GetAnimalPartRequest{
  int64 id = 1;
}

message GetAnimalPartResponse{
  int64 id =  1;
  double weight = 2;
  int64 animalId = 3;
}

message CreateAnimalPartRequest{
  int64 weight = 1;
  int64 animalId = 2;
  int64 trayId = 3;
  int64 animalPartType = 4;
}

message CreateAnimalPartResponse{
  string confirmation = 1;
}

message GetAnimalTypeRequest{
  int64 id = 1;
}

message GetAnimalTypeResponse{
  int64 id = 1;
  string name = 2;
  string description = 3;
}

message CreateAnimalTypeRequest{
  string name = 1;
  string description = 2;
}

message CreateAnimalTypeResponse{
  string confirmation = 1;
}

message GetFarmRequest{
  int64 id=1;
}

message GetFarmResponse{
  int64 id=1;
  string name=2;
  string location=3;
  string description=4;
}

message CreateFarmRequest{
  string name=2;
  string location=3;
  string description=4;
}

message CreateFarmResponse{
  string confirmation=1;
}


message GetProductIdsRequest {
  int64 animalId = 1;
}

message GetProductIdsResponse {
  repeated int64 productIds = 1 [packed=true];
}

message GetProductRequest{
  int64 id=1;
}

message GetProductResponse{
  string name=1;
  string description=2;
  repeated int64 animalParts=3;
}

message CreateProductRequest{
  string name=1;
  string description=2;
}

message CreateProductResponse{
  string confirmation=1;
}

message GetStoreRequest{
  int64 id=1;
}

message GetStoreResponse{
  string name=1;
  string location=2;
  string description=3;
  repeated int64 productIds=4;
}

message CreateStoreRequest{
  string name=1;
  string location=2;
  string description=3;
  repeated int64 productIds=4;
}

message CreateStoreResponse{
  string confirmation=1;
}

message GetTrayRequest{
  int64 id=1;
}

message GetTrayResponse{
  double maxWeight=1;
  string description=2;
  repeated int64 animalParts=3;
}

message CreateTrayRequest{
  double maxWeight=1;
  string description=2;
  repeated int64 animalParts=3;
}

message CreateTrayResponse{
  string confirmation=1;
}

message GetAnimalPartTypeRequest{
  int64 id=1;
}

message GetAnimalPartTypeResponse{
  string name=1;
  string description=2;
  repeated int64 trayIds=3;
  repeated int64 animalParts=4;
}

message CreateAnimalPartTypeRequest
{
  string name=1;
  string description=2;
  repeated int64 trayIds=3;
  repeated int64 animalParts=4;
}

message CreateAnimalPartTypeResponse
{
  string confirmation=1;
}

service AnimalsService {
  rpc getAnimalIds(GetAnimalIdsRequest) returns (GetAnimalIdsResponse);
  rpc getAnimal(GetAnimalRequest) returns (GetAnimalResponse);
  rpc createAnimal(CreateAnimalRequest) returns (CreateAnimalResponse);
}

service AnimalPartsService{
  rpc getAnimalPart(GetAnimalPartRequest) returns (GetAnimalPartResponse);
  rpc createAnimalPart(CreateAnimalPartRequest) returns (CreateAnimalPartResponse);
}

service AnimalTypeService{
  rpc getAnimalTypeService(GetAnimalTypeRequest) returns (GetAnimalTypeResponse);
  rpc createAnimalTypeService(CreateAnimalTypeRequest) returns (CreateAnimalTypeResponse);
}

service FarmService{
  rpc getFarmService(GetFarmRequest) returns (GetFarmResponse);
  rpc createFarmService(CreateFarmRequest) returns (CreateFarmResponse);
}


service ProductsService {
  rpc getProductIds(GetProductIdsRequest) returns (GetProductIdsResponse);
  rpc getProductService(GetProductRequest) returns (GetProductResponse);
  rpc createProductService(CreateProductRequest) returns (CreateProductResponse);
}

service StoreService{
  rpc getStoreService(GetStoreRequest) returns (GetStoreResponse);
  rpc createStoreService(CreateStoreRequest) returns (CreateStoreResponse);
}

service TrayService{
  rpc getTrayService(GetTrayRequest) returns (GetTrayResponse);
  rpc createTrayService(CreateTrayRequest) returns (CreateTrayResponse);
}

service AnimalPartTypeService{
  rpc getAnimalPartTypeService(GetAnimalPartTypeRequest) returns (GetAnimalPartTypeResponse);
  rpc createAnimalPartTypeService(CreateAnimalPartTypeRequest) returns (CreateAnimalPartTypeResponse);
}
